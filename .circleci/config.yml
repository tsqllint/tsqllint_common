version: 2.1
jobs:

  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - checkout
      - run:
          name: build and test
          command: ./scripts/dotnet_build_test.sh

  build and notify:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - checkout
      - run:
          name: build and test
          command: ./scripts/dotnet_build_test.sh
      - store_artifacts:
          path: /artifacts/linux-x64.tgz
      - store_artifacts:
          path: /artifacts/linux-musl-x64.tgz
      - store_artifacts:
          path: /artifacts/linux-musl-arm64.tgz
      - store_artifacts:
          path: /artifacts/linux-arm.tgz
      - store_artifacts:
          path: /artifacts/linux-arm64.tgz
      - store_artifacts:
          path: /artifacts/osx-x64.tgz
      - store_artifacts:
          path: /artifacts/osx-arm64.tgz
      - store_artifacts:
          path: /artifacts/win-x64.tgz
      - store_artifacts:
          path: /artifacts/win-x86.tgz
      - store_artifacts:
          path: /artifacts/win-arm64.tgz

  package and push to nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - checkout
      - run:
          name: release
          command: ./scripts/dotnet_package.sh
      - save_cache:
          paths:
            - artifacts
          key: artifacts-{{ .Environment.CIRCLE_SHA1 }}

  release to github:
    docker:
      - image: nathanboyd/github_cli:0.0.2
    steps:
      - checkout
      - restore_cache:
          key: artifacts-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: push artifacts to github release
          command: ./scripts/github_create_release.sh

workflows:

  build pull requests:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /pull\/\d+/

  build branches:
    jobs:
      - build and notify:
          filters:
            branches:
              only:
                - /.*/

  build and publish tags:
    jobs:
      - build and notify:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - wait for approval:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - package and push to nuget:
          requires:
            - wait for approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - release to github:
          requires:
            - package and push to nuget
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
